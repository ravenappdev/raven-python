# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Channel(str, enum.Enum):
    VOICE = "VOICE"
    PUSH = "PUSH"
    SMS = "SMS"
    EMAIL = "EMAIL"
    WHATSAPP = "WHATSAPP"
    WEBHOOK = "WEBHOOK"
    SLACK = "SLACK"
    IN_APP = "IN_APP"
    TELEGRAM = "TELEGRAM"

    def visit(
        self,
        voice: typing.Callable[[], T_Result],
        push: typing.Callable[[], T_Result],
        sms: typing.Callable[[], T_Result],
        email: typing.Callable[[], T_Result],
        whatsapp: typing.Callable[[], T_Result],
        webhook: typing.Callable[[], T_Result],
        slack: typing.Callable[[], T_Result],
        in_app: typing.Callable[[], T_Result],
        telegram: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Channel.VOICE:
            return voice()
        if self is Channel.PUSH:
            return push()
        if self is Channel.SMS:
            return sms()
        if self is Channel.EMAIL:
            return email()
        if self is Channel.WHATSAPP:
            return whatsapp()
        if self is Channel.WEBHOOK:
            return webhook()
        if self is Channel.SLACK:
            return slack()
        if self is Channel.IN_APP:
            return in_app()
        if self is Channel.TELEGRAM:
            return telegram()
